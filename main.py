import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, InputMediaPhoto, InputMediaVideo, BotCommand
from aiogram.filters import Command
from dotenv import load_dotenv

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
LOG_DIR = os.path.join(BASE_DIR, "logs")
if not os.path.exists(LOG_DIR):
    os.makedirs(LOG_DIR)


# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(message)s",
    handlers=[
        logging.FileHandler(os.path.join(
            LOG_DIR, "bot.log"), encoding="utf-8"),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
if not CHAT_ID:
    raise ValueError("CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
CHAT_ID = int(CHAT_ID)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


async def set_bot_commands():
    commands = [
        BotCommand(command="start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"),
    ]
    await bot.set_my_commands(commands)
    logger.info("–ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")


# –ö–æ–º–∞–Ω–¥—ã
@dp.message(Command("start"))
async def start_cmd(msg: Message):
    await msg.answer("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ‚úÖ üìå "
                     "–ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –º–æ–Ω—Ç–∞–∂–∞, —è –æ—Ç–ø—Ä–∞–≤–ª—é –∏—Ö –≤ —á–∞—Ç.")
    logger.info(
        f"{msg.from_user.full_name} ({msg.from_user.id}) –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /start")


@dp.message(Command("id"))
async def chat_id_cmd(msg: Message):
    await msg.answer(
        f"chat_id —ç—Ç–æ–≥–æ —á–∞—Ç–∞: <code>{msg.chat.id}</code>", parse_mode="HTML")
    logger.info(
        f"{msg.from_user.full_name} ({msg.from_user.id})"
        f" –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /id ‚Üí chat_id={msg.chat.id}")


album_buffer = {}


# –û–¥–∏–Ω–æ—á–Ω–æ–µ —Ñ–æ—Ç–æ
@dp.message(F.photo & ~F.media_group_id)
async def handle_photo(msg: Message):
    try:
        caption = msg.caption or f"üî© –°–±–æ—Ä–∫–∞ –æ—Ç {msg.from_user.full_name}‚öíÔ∏è"
        await bot.send_photo(
            chat_id=CHAT_ID,
            photo=msg.photo[-1].file_id, caption=caption)
        await msg.reply("‚úÖ –§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        logger.info(f"–§–æ—Ç–æ –æ—Ç {msg.from_user.full_name}"
                    f"({msg.from_user.id}) ‚Üí {CHAT_ID}")
    except Exception as e:
        await msg.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ.")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Ñ–æ—Ç–æ: {e}")


# –û–¥–∏–Ω–æ—á–Ω–æ–µ –≤–∏–¥–µ–æ
@dp.message(F.video & ~F.media_group_id)
async def handle_video(msg: Message):
    try:
        caption = msg.caption or f"üî© –°–±–æ—Ä–∫–∞ –æ—Ç {msg.from_user.full_name}‚öíÔ∏è"
        await bot.send_video(
            chat_id=CHAT_ID,
            video=msg.video.file_id, caption=caption)
        await msg.reply("‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        logger.info(f"–í–∏–¥–µ–æ –æ—Ç {msg.from_user.full_name}"
                    f"({msg.from_user.id}) ‚Üí {CHAT_ID}")
    except Exception as e:
        await msg.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ.")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ –≤–∏–¥–µ–æ: {e}")


# –§–æ—Ç–æ + –í–∏–¥–µ–æ
@dp.message(F.media_group_id)
async def handle_album(msg: Message):
    media_group_id = msg.media_group_id

    if media_group_id not in album_buffer:
        album_buffer[media_group_id] = []

    album_buffer[media_group_id].append(msg)

    await asyncio.sleep(2)  # –û–∂–∏–¥–∞–Ω–∏–µ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

    if media_group_id in album_buffer:
        album = album_buffer.pop(media_group_id)
        media = []

        for i, msg in enumerate(album):
            caption = (
                f"üî© –°–±–æ—Ä–∫–∞ –æ—Ç {msg.from_user.full_name}‚öíÔ∏è"
                if i == 0 else None)
            if msg.photo:
                media.append(InputMediaPhoto(media=msg.photo[-1].file_id,
                                             caption=caption))
            elif msg.video:
                media.append(InputMediaVideo(media=msg.video.file_id,
                                             caption=caption))

        try:
            if media:
                await bot.send_media_group(chat_id=CHAT_ID, media=media)
                await msg.reply(
                    f"‚úÖ –ê–ª—å–±–æ–º ({len(media)} —à—Ç.) —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
                logger.info(f"–ê–ª—å–±–æ–º ({len(media)} —à—Ç.) "
                            f"–æ—Ç {msg.from_user.full_name}"
                            f"({msg.from_user.id}) ‚Üí {CHAT_ID}")
        except Exception as e:
            await msg.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–ª—å–±–æ–º–∞.")
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ –∞–ª—å–±–æ–º–∞: {e}")


@dp.message()
async def handle_unsupported(msg: Message):
    if not msg.photo and not msg.video and not msg.media_group_id:
        await msg.reply("‚ö†Ô∏è –ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ. "
                        "–û–Ω —É–∂–µ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ ‚úÖ üìå "
                        "–ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –º–æ–Ω—Ç–∞–∂–∞, —è –æ—Ç–ø—Ä–∞–≤–ª—é –∏—Ö –≤ —á–∞—Ç.")
        logger.info(f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–∞–π–ª –∏–ª–∏ —Å–∏–º–≤–æ–ª –æ—Ç "
                    f"{msg.from_user.full_name} ({msg.from_user.id})")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await set_bot_commands()
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
